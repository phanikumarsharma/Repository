{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
	    "rdBrokerURL": {
            "type": "string",
            "metadata": {
                "description": "The Broker URL of the Windows Virtual Desktop deployment the session hosts will be connected to."
            },
            "defaultValue": "https://rdbroker.wvd.microsoft.com"
        },
        "existingTenantGroupName": {
            "type": "string",
            "metadata": {
                "description": "The name of the tenant group in the Windows Virtual Desktop deployment"
            },
            "defaultValue": "Default Tenant Group"
        },
        "existingTenantName": {
            "type": "string",
            "metadata": {
                "description": "The name of the tenant in the Windows Virtual Desktop deployment."
            }
        },
        "ExistingHostpoolName": {
            "type": "string",
            "metadata": {
                "description": "The name of the hostpool to be in the RDS Tenant."
            }
        },
		"ActionOnPreviousVirtualMachines": {
            "defaultValue": "Delete",
            "allowedValues": [
                "Deallocate",
                "Delete"
            ],
            "type": "string",
            "metadata": {
                "description": "Action to be taken on the old Azure VM resources. If delete is selected, the associated network interfaces and vhd files in Azure blob storage will also be deleted."
            }
        },
        "userLogoffDelayInMinutes": {
            "type": "int",
            "metadata": {
                "description": "Delay before users are automatically logged off from the current VMs in the hostpool."
            }
        },
        "userNotificationMessege": {
            "defaultValue": "Scheduled maintenance, please save your work and logoff as soon as possible",
            "type": "string",
            "metadata": {
                "description": "Message that will be displayed to the user notifying them of the automatic logoff."
            }
        },
        "tenantAdminUpnOrApplicationId": {
            "type": "string",
            "metadata": {
                "description": "The template will fail if you enter a user account that requires MFA or an application that is secured by a certificate. The UPN or ApplicationId must be an RDS Owner in the WVD Tenant to create the hostpool or an RDS Owner of the host pool to provision the host pool with additional VMs."
            }
        },
        "tenantAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password that corresponds to the tenant admin UPN."
            }
        },
        "isServicePrincipal": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "The boolean value indicating if the credentials are for a service principal."
            }
        },
        "aadTenantId": {
            "type": "string",
            "metadata": {
                "description": "(Required when isServicePrincipal = True) This value identifies the Azure AD tenant of the service principal."
            }
        },		
		"rdshImageSource": {
            "type": "string",
            "metadata": {
                "description": "Select the image source for the session host vms. VMs from a Gallery image will be created with Managed Disks."
            },
            "defaultValue": "Gallery",
            "allowedValues": [
                "CustomVHD",
				"CustomImage",
                "Gallery"
            ]
        },
        "vmImageVhdUri": {
            "type": "string",
            "metadata": {
                "description": "(Required when rdshImageSource = CustomVHD) URI of the sysprepped image vhd file to be used to create the session host VMs. For example, https://rdsstorage.blob.core.windows.net/vhds/sessionhostimage.vhd"
            },
            "defaultValue": ""
        },
        "rdshGalleryImageSKU": {
            "type": "string",
            "metadata": {
                "description": "(Required when rdshImageSource = Gallery) Gallery image SKU."
            },
            "allowedValues": [
                "Windows-10-Enterprise-multi-session",
                "2016-Datacenter"
            ],
            "defaultValue": "Windows-10-Enterprise-multi-session"
        },
        "rdshIsWindowsServer": {
            "type": "bool",
            "metadata": {
                "description": "If the VM is a Windows Server SKU (2016, 2012R2, etc.), enter true. If the VM is a Windows client SKU (Windows 10)."
            },
            "defaultValue": false
        },
		"rdshCustomImageSourceName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "(Required when rdshImageSource = CustomImage) Name of the managed disk."
            }
        },		
		 "rdshCustomImageSourceResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "(Required when rdshImageSource = CustomImage) Resource group name for the managed disk, if you choose to provide one."
            }
        },
        "rdshNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "This prefix will be used in combination with the VM number to create the VM name. If using “rdsh” as the prefix, VMs would be named “rdsh-0”, “rdsh-1”, etc. You should use a unique prefix to reduce name collisions in Active Directory."
            },
            "defaultValue": "[take(toLower(resourceGroup().name),10)]"
        },
        "rdshNumberOfInstances": {
            "type": "int",
            "metadata": {
                "description": "Number of session hosts that will be created and added to the hostpool."
            }
        },
        "rdshVMDiskType": {
            "type": "string",
            "allowedValues": [
                "SSD",
                "HDD"
            ],
            "metadata": {
                "description": "The VM disk type for the VM: HDD or SSD."
            },
            "defaultValue": "SSD"
        },
        "rdshVmSize": {
            "type": "string",
            "metadata": {
                "description": "The size of the session host VMs."
            },
            "defaultValue": "Standard_D2s_v3"
        },
        "rdshUseManagedDisks": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "True indicating you would like to use managed disks or false indicating you would like to use unmanaged disks."
            }
        },
        "storageAccountResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "(Required when rdshUseManagedDisks = False) The resource group containing the storage account of the image vhd file."
            },
            "defaultValue": ""
        },
		"domainToJoin": {
            "type": "string",
            "metadata": {
                "description": "FQDN of the AD domain controller to which sesion host VMs are going to be joined. For example, “contoso.com”."
            },
            "defaultValue": "contoso.com"
        },
        "existingDomainUPN": {
            "type": "string",
            "metadata": {
                "description": "A username in the domain that has privileges to join the session hosts to the domain. For example, “user1@contoso.com”."
            }
        },
        "existingDomainPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password that corresponds to the existing domain username."
            }
        },
        "existingVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the virtual network the VMs will be connected to."
            }
        },
        "existingSubnetName": {
            "type": "string",
            "metadata": {
                "description": "The subnet the VMs will be placed in."
            }
        },
        "virtualNetworkResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The resource group containing the existing virtual network."
            }
        },
        "ouPath": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies an organizational unit (OU) for the domain account. Example: OU=testOU;DC=domain;DC=Domain;DC=com"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {

                "description": "The base URI where artifacts required by this template are located."
            },
            "defaultValue": "https://raw.githubusercontent.com/viswanadhamkudapu/Repository/master/Upgrade/"
        },

        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation when they're located in a storage account with private access."
            },
            "defaultValue": ""
        }

    },
    "variables": {
        "rdshManagedDisks": "[if(or(equals(parameters('rdshImageSource'), 'CustomVHD'),equals(parameters('rdshUseManagedDisks'),bool('false'))), parameters('rdshUseManagedDisks'), bool('true'))]",
        "rdshPrefix": "[concat(parameters('rdshNamePrefix'),'-')]",
		"messageTitle": "Request for Logoff",
		"subscriptionId": "[subscription().subscriptionId]",
        "avSetSKU": "[if(variables('rdshManagedDisks'), 'Aligned', 'Classic')]",
        "existingDomainName": "[last(split(parameters('existingDomainUPN'), '@'))]",
        "existingDomainUsername": "[first(split(parameters('existingDomainUPN'), '@'))]",
        "vhds": "[concat('vhds','/', variables('rdshPrefix'))]",
        "subnet-id": "[concat(resourceId(parameters('virtualNetworkResourceGroupName'),'Microsoft.Network/virtualNetworks',parameters('existingVnetName')),'/subnets/',parameters('existingSubnetName'))]",
        "vmTemplateName": "[concat( if(variables('rdshManagedDisks'), 'managedDisks', 'unmanagedDisks'), '-', toLower(replace(parameters('rdshImageSource'),' ', '')), 'vm')]",
        "vmTemplateUri": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/',variables('vmTemplateName'),'.json')]",
        "removeScriptURI": "[concat(parameters('_artifactsLocation'),'/Scripts/RemoveScript.ps1')]",
		"deployAgentUri": "[concat(parameters('baseurl'),'/Scripts/DeployAgent.zip')]",
        "rdshUnmanagedDisks": "[if(equals(variables('vmTemplateName'), 'unmanagedDisks-galleryvm'), 'newStorageAccount','empty')]",
        "newstorageAccountName": "[concat(uniquestring(resourceGroup().id), 'stndrsa')]",
        "newstorageact": "[if(equals(variables('vmTemplateName'), 'unmanagedDisks-galleryvm'), variables('newstorageAccountName'),'empty')]",
        "storageAccountType": "Standard_LRS"
    },
    "resources": [
        {
            "apiVersion": "2016-04-30-preview",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[concat(variables('rdshPrefix'), 'availabilitySet')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformUpdateDomainCount": 5,
                "platformFaultDomainCount": 2
            },
            "sku": {
                "name": "[variables('avSetSKU')]"
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Storage/storageAccounts",
            "condition": "[equals(variables('vmTemplateName'), 'unmanagedDisks-galleryvm')]",
            "name": "[variables('newstorageact')]",
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "Storage",
            "location": "[resourceGroup().location]"
        },
		{
            "apiVersion": "2017-05-10",
            "name": "vmCreation-linkedTemplate",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmImageVhdUri": {
                        "value": "[parameters('vmImageVhdUri')]"
                    },
                    "storageAccountResourceGroupName": {
                        "value": "[parameters('storageAccountResourceGroupName')]"
                    },
                    "rdshGalleryImageSKU": {
                        "value": "[parameters('rdshGalleryImageSKU')]"
                    },
                    "rdshPrefix": {
                        "value": "[variables('rdshPrefix')]"
                    },
                    "rdshNumberOfInstances": {
                        "value": "[parameters('rdshNumberOfInstances')]"
                    },
                    "rdshVMDiskType": {
                        "value": "[parameters('rdshVMDiskType')]"
                    },
                    "rdshVmSize": {
                        "value": "[parameters('rdshVmSize')]"
                    },
                    "existingDomainusername": {
                        "value": "[variables('existingDomainUsername')]"
                    },
                    "existingDomainPassword": {
                        "value": "[parameters('existingDomainPassword')]"
                    },
                    "subnet-id": {
                        "value": "[variables('subnet-id')]"
                    },
					"storageAccountNameNew": {
                        "value": "[variables('rdshUnmanagedDisks')]"
                    },
                    "newstorageAccountName": {
                        "value": "[variables('newstorageact')]"
                    },
                    "vhds": {
                        "value": "[variables('vhds')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', variables('rdshPrefix'), 'availabilitySet')]"
            ]
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('rdshPrefix'), copyindex(),'/', 'joindomain')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "vmCreation-linkedTemplate"
            ],
            "copy": {
                "name": "rdsh-domain-join-loop",
                "count": "[parameters('rdshNumberOfInstances')]"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "name": "[parameters('domainToJoin')]",
                    "ouPath": "[parameters('ouPath')]",
                    "user": "[concat(parameters('domainToJoin'),'\\', variables('existingDomainUsername'))]",
                    "restart": "true",
                    "options": "3"
                },
                "protectedSettings": {
                    "password": "[parameters('existingDomainPassword')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('rdshPrefix'), '0', '/', 'removevms')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "script"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.8",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[variables('removeScriptURI')]"
                    ]
                },
					"ProtectedSettings":{
                    "commandToExecute": "[concat('powershell.exe -noninteractive -executionpolicy bypass -file RemoveScript.ps1',' -RDBrokerURL \"', parameters('RDBrokerURL'), '\"',' ',' -TenantGroupName \"', parameters('ExistingTenantGroupName'), '\"',' ',' -TenantName \"', parameters('ExistingTenantName'), '\"',' ',' -HostPoolName \"', parameters('ExistingHostPoolName'), '\"',' ',' -Hours \"', variables('RegistrationExpirationHours'), '\"',' ',' -TenantAdminUPN \"', parameters('tenantAdminUpnOrApplicationId'), '\"',' ',' -TenantAdminPassword \"', parameters('TenantAdminPassword'), '\"',' ',' -SubscriptionId \"', variables('subscriptionId'), '\"',' ',' -Fileuri \"', variables('deployAgentURI'), '\"',' ',' -deleteordeallocateVMs \"', parameters('ActionOnPreviousVirtualMachines'), '\"',' ',' -messageTitle \"', variables('messageTitle'), '\"',' ',' -userNotificationMessege \"', parameters('userNotificationMessege'), '\"',' ',' -userLogoffDelayInMinutes \"', parameters('userLogoffDelayInMinutes'), '\"',' ',' -localAdminUsername \"', variables('existingDomainUsername'), '\"',' ',' -localAdminpassword \"', parameters('existingDomainPassword'), '\"',' ',' -rdshIs1809OrLater \"', parameters('rdshIs1809OrLater'), '\"', ' ',' -isServicePrincipal \"', parameters('isServicePrincipal'), '\"','  ',' -aadTenantId \"', parameters('aadTenantId'), '\"',' ',' -ActivationKey \"', parameters('activationKey'), '\"',' ',' -DomainName \"', variables('existingDomainName'), '\"')]"
                    }
                },
               "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', concat(variables('rdshPrefix'), '0','/extensions/joindomain'))]"
            ]
        },
		{
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('rdshPrefix'), copyindex(),'/', 'dscextension')]",
            "location": "[resourceGroup().location]",

            "dependsOn": [
                "rdsh-domain-join-loop",
				"[concat('Microsoft.Compute/virtualMachines/', concat(variables('rdshPrefix'), '0','/extensions/removevms'))]"
            ],
            "copy": {
                "name": "rdsh-dsc-loop",
                "count": "[parameters('rdshNumberOfInstances')]"
            },
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.73",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[concat(parameters('_artifactsLocation'),'/DSC/Configuration.zip',parameters('_artifactsLocationSasToken'))]",
                    "configurationFunction": "Configuration.ps1\\SessionHost",
                    "properties": {
                        "TenantAdminCredentials":{
                            "userName":"[parameters('tenantAdminUpnOrApplicationId')]",
                            "password":"PrivateSettingsRef:tenantAdminPassword"
                        },
                        "ADAdminCredentials":{
                            "userName":"[parameters('existingDomainUPN')]",
                            "password":"PrivateSettingsRef:adAdminPassword"
                        },
                        "RDBrokerURL":"[parameters('rdBrokerURL')]",
                        "DefinedTenantGroupName":"[parameters('existingTenantGroupName')]",
                        "TenantName":"[parameters('existingTenantName')]",
                        "ExistingHostPoolName":"[parameters('ExistingHostPoolName')]",
                        "isServicePrincipal":"[parameters('isServicePrincipal')]",
                        "AadTenantId":"[parameters('aadTenantId')]"
                    }
                },
                "ProtectedSettings":{
                    "items":{
                        "tenantAdminPassword":"[parameters('tenantAdminPassword')]",
                        "adAdminPassword":"[parameters('existingDomainPassword')]"
                    }
                }
            }
        }
    ]
}